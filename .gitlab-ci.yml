# To execute a job locally, install gitlab-runner (https://docs.gitlab.com/runner/install/)
# and run the following command:
# gitlab-runner exec docker --docker-privileged --docker-volumes /sys/fs/cgroup:/sys/fs/cgroup:rw --env CI_REGISTRY_IMAGE=registry.gitlab.com/sosy-lab/software/benchexec <<JOB_NAME>>

variables:
  PRIMARY_USER: benchexec

image: ${CI_REGISTRY_IMAGE}/test:python-${PYTHON_VERSION}

before_script:
  # Create user, we do not want to test as root
  - adduser --disabled-login --gecos "" $PRIMARY_USER
  # Activate coverage for subprocesses
  - printf 'import coverage\ncoverage.process_startup()\n' > "/usr/local/lib/python${PYTHON_VERSION}/site-packages/sitecustomize.py"
  # Give $PRIMARY_USER permission to create cgroups
  - test/for_each_of_my_cgroups.sh chgrp $PRIMARY_USER
  - test/for_each_of_my_cgroups.sh chmod g+w $PRIMARY_USER
  # Install BenchExec
  - sudo -u $PRIMARY_USER pip install --user .
  # Start lxcfs
  - lxcfs /var/lib/lxcfs &

.unit-tests: &unit-tests
  stage: test
  script:
    - sudo -u $PRIMARY_USER
        COVERAGE_PROCESS_START=.coveragerc
        coverage run setup.py test
  after_script:
    - sudo -u $PRIMARY_USER coverage combine
    - sudo -u $PRIMARY_USER coverage report
    - sudo -u $PRIMARY_USER coverage xml
  tags:
    - privileged
  artifacts:
    paths:
      - coverage.xml

unit-tests:python-2.7:
  <<: *unit-tests
  variables:
    PYTHON_VERSION: '2.7'

unit-tests:python-3.4:
  <<: *unit-tests
  variables:
    PYTHON_VERSION: '3.4'

unit-tests:python-3.5:
  <<: *unit-tests
  variables:
    PYTHON_VERSION: '3.5'

unit-tests:python-3.6:
  <<: *unit-tests
  variables:
    PYTHON_VERSION: '3.6'

unit-tests:python-3.7:
  <<: *unit-tests
  variables:
    PYTHON_VERSION: '3.7'

deploy-coverage:
  stage: deploy
  variables:
    PYTHON_VERSION: '3.7'
  before_script:
    - pip install -e git+https://github.com/codacy/python-codacy-coverage.git#egg=codacy
  script:
    - python-codacy-coverage -r coverage.xml
  dependencies:
    - unit-tests:python-3.7
  only:
    refs:
      - master
    variables:
      - $CODACY_PROJECT_TOKEN # required for job
      - $CI_PROJECT_PATH == $PROJECT_PATH # not on forks


# Static checks
check-format:
  stage: test
  image: python:3.7
  before_script:
    - pip install black
  script:
    - black . --check --diff

flake8:
  stage: test
  image: python:3.7
  before_script:
    - pip install flake8-awesome
  script:
    - flake8
  allow_failure: true # need to fix existing code first
