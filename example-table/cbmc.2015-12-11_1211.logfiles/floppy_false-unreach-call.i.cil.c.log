./cbmc --32 --propertyfile test/programs/benchmarks/ntdrivers/ALL.prp test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="nodeType" attr.type="string" for="node" id="nodetype">
    <default>path</default>
  </key>
  <key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier">
    <default>false</default>
  </key>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="threadNumber" attr.type="int" for="node" id="thread">
    <default>0</default>
  </key>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <node id="sink"/>
    <node id="4.50">
      <data key="entry">true</data>
    </node>
    <edge source="4.50" target="7.53">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7029</data>
      <data key="assumption">we_should_unload = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="7.53"/>
    <edge source="7.53" target="9.55">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7031</data>
      <data key="assumption">__BLAST_NONDET = 3;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="9.55"/>
    <edge source="9.55" target="11.57">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7032</data>
      <data key="assumption">irp_choice = 16777216;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="11.57"/>
    <edge source="11.57" target="12.58">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7037</data>
      <data key="assumption">status = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="12.58"/>
    <edge source="12.58" target="4896.61">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7038</data>
      <data key="assumption">pirp = &amp;irp.Type;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="4896.61"/>
    <edge source="4896.61" target="4897.62">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2113</data>
      <data key="assumption">UNLOADED = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4897.62"/>
    <edge source="4897.62" target="4898.63">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2114</data>
      <data key="assumption">NP = 1;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4898.63"/>
    <edge source="4898.63" target="4899.64">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2115</data>
      <data key="assumption">DC = 2;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4899.64"/>
    <edge source="4899.64" target="4900.65">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2116</data>
      <data key="assumption">SKIP1 = 3;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4900.65"/>
    <edge source="4900.65" target="4901.66">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2117</data>
      <data key="assumption">SKIP2 = 4;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4901.66"/>
    <edge source="4901.66" target="4902.67">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2118</data>
      <data key="assumption">MPR1 = 5;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4902.67"/>
    <edge source="4902.67" target="4903.68">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2119</data>
      <data key="assumption">MPR3 = 6;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4903.68"/>
    <edge source="4903.68" target="4904.69">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2120</data>
      <data key="assumption">IPC = 7;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4904.69"/>
    <edge source="4904.69" target="4905.70">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2121</data>
      <data key="assumption">s = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4905.70"/>
    <edge source="4905.70" target="4906.71">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2122</data>
      <data key="assumption">pended = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4906.71"/>
    <edge source="4906.71" target="4907.72">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2123</data>
      <data key="assumption">compFptr = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *, void *))NULL);</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4907.72"/>
    <edge source="4907.72" target="4908.73">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2124</data>
      <data key="assumption">compRegistered = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4908.73"/>
    <edge source="4908.73" target="4909.74">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2125</data>
      <data key="assumption">lowerDriverReturn = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4909.74"/>
    <edge source="4909.74" target="4910.75">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2126</data>
      <data key="assumption">setEventCalled = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="4910.75"/>
    <edge source="4910.75" target="14.79">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2127</data>
      <data key="assumption">customIrp = 0;</data>
      <data key="assumption.scope">_BLAST_init</data>
    </edge>
    <node id="14.79"/>
    <edge source="14.79" target="1155.83">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7040</data>
      <data key="assumption">DriverObject = &amp;d.Type;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="14.80"/>
    <node id="1155.83"/>
    <edge source="1155.83" target="1156.84">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2138</data>
      <data key="assumption">ntStatus = 0;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1156.84"/>
    <edge source="1156.84" target="1157.85">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2142</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[3] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[4] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL);</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1157.85"/>
    <edge source="1157.85" target="1158.86">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2143</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[4] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL);</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1158.86"/>
    <edge source="1158.86" target="1159.87">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2144</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = FloppyReadWrite; d.MajorFunction[4] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL);</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1159.87"/>
    <edge source="1159.87" target="1160.88">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2145</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = FloppyReadWrite; d.MajorFunction[4] = FloppyReadWrite; d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL);</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1160.88"/>
    <edge source="1160.88" target="1161.89">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2146</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = FloppyReadWrite; d.MajorFunction[4] = FloppyReadWrite; d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = FloppyDeviceControl; d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL);</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1161.89"/>
    <edge source="1161.89" target="1162.90">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2147</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = FloppyReadWrite; d.MajorFunction[4] = FloppyReadWrite; d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = FloppyDeviceControl; d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = FloppyPnp;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1162.90"/>
    <edge source="1162.90" target="1163.91">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2148</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = ((void (*)(struct _DRIVER_OBJECT *))NULL); d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = FloppyReadWrite; d.MajorFunction[4] = FloppyReadWrite; d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = FloppyDeviceControl; d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = FloppyPower; d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = FloppyPnp;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1163.91"/>
    <edge source="1163.91" target="1164.92">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2149</data>
      <data key="assumption">d.Type = 0; d.Size = 0; d.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); d.Flags = 0; d.DriverStart = NULL; d.DriverSize = 0; d.DriverSection = NULL; d.DriverExtension = ((struct _DRIVER_EXTENSION *)NULL); d.DriverName.Length = 0; d.DriverName.MaximumLength = 0; d.DriverName.Buffer = ((unsigned short int *)NULL); d.HardwareDatabase = ((struct _UNICODE_STRING *)NULL); d.FastIoDispatch = ((struct _FAST_IO_DISPATCH *)NULL); d.DriverInit = ((int (*)(struct _DRIVER_OBJECT *, struct _UNICODE_STRING *))NULL); d.DriverStartIo = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.DriverUnload = FloppyUnload; d.MajorFunction[0] = FloppyCreateClose; d.MajorFunction[1] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[2] = FloppyCreateClose; d.MajorFunction[3] = FloppyReadWrite; d.MajorFunction[4] = FloppyReadWrite; d.MajorFunction[5] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[6] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[7] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[8] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[9] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[10] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[11] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[12] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[13] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[14] = FloppyDeviceControl; d.MajorFunction[15] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[16] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[17] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[18] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[19] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[20] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[21] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[22] = FloppyPower; d.MajorFunction[23] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[24] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[25] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[26] = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); d.MajorFunction[27] = FloppyPnp;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1164.92"/>
    <edge source="1164.92" target="1165.95">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2150</data>
      <data key="assumption">invalid_object0.DriverObject = ((struct _DRIVER_OBJECT *)NULL); invalid_object0.AddDevice = FloppyAddDevice; invalid_object0.Count = 0; invalid_object0.ServiceKeyName.Length = 0; invalid_object0.ServiceKeyName.MaximumLength = 0; invalid_object0.ServiceKeyName.Buffer = ((unsigned short int *)NULL);</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1165.95"/>
    <edge source="1165.95" target="660.100">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2151</data>
      <data key="assumption">PoolType = /*enum*/NonPagedPool;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1165.96"/>
    <node id="1165.97"/>
    <node id="660.100"/>
    <edge source="660.100" target="661.101">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7230</data>
      <data key="assumption">tmp = &amp;_SLAM_alloc_dummy;</data>
      <data key="assumption.scope">ExAllocatePoolWithTag</data>
    </edge>
    <node id="661.101"/>
    <edge source="661.101" target="1166.105">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7231</data>
      <data key="assumption">x = &amp;_SLAM_alloc_dummy;</data>
      <data key="assumption.scope">ExAllocatePoolWithTag</data>
    </edge>
    <node id="1166.105"/>
    <edge source="1166.105" target="1168.106">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2151</data>
      <data key="assumption">tmp = &amp;_SLAM_alloc_dummy;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1168.106"/>
    <edge source="1168.106" target="1169.107">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2152</data>
      <data key="assumption">PagingMutex = &amp;_SLAM_alloc_dummy;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1169.107"/>
    <edge source="1169.107" target="1174.108">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2154</data>
      <data key="sourcecode">[!((unsigned int)&amp;_SLAM_alloc_dummy == 0)]</data>
    </edge>
    <node id="1174.108"/>
    <edge source="1174.108" target="1175.109">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2160</data>
      <data key="assumption">_SLAM_alloc_dummy = 1;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1175.109"/>
    <edge source="1175.109" target="1176.110">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2161</data>
      <data key="assumption">_SLAM_alloc_dummy = 1;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1176.110"/>
    <edge source="1176.110" target="1177.111">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2165</data>
      <data key="sourcecode">[!(!((int)byte_extract_little_endian(__CPROVER_memory#0, -2161984, enum _ALTERNATIVE_ARCHITECTURE_TYPE) == 1))]</data>
    </edge>
    <node id="1177.111"/>
    <edge source="1177.111" target="1180.113">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2166</data>
      <data key="assumption">DriveMediaLimits = &amp;_DriveMediaLimits_NEC98[0].HighestDriveMediaType;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="1180.113"/>
    <edge source="1180.113" target="1181.114">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2170</data>
      <data key="sourcecode">[!(!((int)byte_extract_little_endian(__CPROVER_memory#0, -2161984, enum _ALTERNATIVE_ARCHITECTURE_TYPE) == 1))]</data>
    </edge>
    <node id="1181.114"/>
    <edge source="1181.114" target="15.119">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2171</data>
      <data key="assumption">DriveMediaConstants = &amp;_DriveMediaConstants_NEC98[0].MediaType;</data>
      <data key="assumption.scope">DriverEntry</data>
    </edge>
    <node id="15.119"/>
    <edge source="15.119" target="17.120">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7040</data>
      <data key="assumption">status = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="17.120"/>
    <edge source="17.120" target="18.121">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7042</data>
      <data key="sourcecode">[!(!(status!0@1#3 &gt;= 0))]</data>
    </edge>
    <node id="18.121"/>
    <edge source="18.121" target="19.122">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7043</data>
      <data key="assumption">s = 1;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="19.122"/>
    <edge source="19.122" target="20.123">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7044</data>
      <data key="assumption">customIrp = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="20.123"/>
    <edge source="20.123" target="21.124">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7045</data>
      <data key="assumption">setEventCalled = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="21.124"/>
    <edge source="21.124" target="22.125">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7046</data>
      <data key="assumption">lowerDriverReturn = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="22.125"/>
    <edge source="22.125" target="23.126">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7047</data>
      <data key="assumption">compRegistered = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="23.126"/>
    <edge source="23.126" target="24.127">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7048</data>
      <data key="assumption">compFptr = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *, void *))NULL);</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="24.127"/>
    <edge source="24.127" target="25.128">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7049</data>
      <data key="assumption">pended = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="25.128"/>
    <edge source="25.128" target="26.129">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7050</data>
      <data key="assumption">irp.Type = 0; irp.Size = 0; irp.MdlAddress = ((struct _MDL *)NULL); irp.Flags = 0; irp.AssociatedIrp.MasterIrp = ((struct _IRP *)NULL) + 4102; irp.ThreadListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.ThreadListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.IoStatus.__annonCompField4.Status = 0l; irp.IoStatus.Information = 25178128ul; irp.RequestorMode = 0; irp.PendingReturned = 0; irp.StackCount = 0; irp.CurrentLocation = 31; irp.Cancel = 1; irp.CancelIrql = 0; irp.ApcEnvironment = 0; irp.AllocationFlags = 0; irp.UserIosb = ((struct _IO_STATUS_BLOCK *)NULL); irp.UserEvent = ((struct _KEVENT *)NULL); irp.Overlay.AsynchronousParameters.UserApcRoutine = ((void (*)(void *, struct _IO_STATUS_BLOCK *, unsigned long int))NULL); irp.Overlay.AsynchronousParameters.UserApcContext = NULL; irp.CancelRoutine = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); irp.UserBuffer = NULL; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.SortKey = 0ul; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.Inserted = 0; irp.Tail.Overlay.Thread = ((struct _ETHREAD *)NULL); irp.Tail.Overlay.AuxiliaryBuffer = ((char *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation = &amp;u; irp.Tail.Overlay.OriginalFileObject = ((struct _FILE_OBJECT *)NULL);</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="26.129"/>
    <edge source="26.129" target="27.130">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7051</data>
      <data key="assumption">myStatus = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="27.130"/>
    <edge source="27.130" target="4912.133">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7052</data>
      <data key="sourcecode">[!(irp_choice!0@1#2 == 0)]</data>
    </edge>
    <node id="4912.133"/>
    <edge source="4912.133" target="4913.134">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7015</data>
      <data key="assumption">s = 1;</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="4913.134"/>
    <edge source="4913.134" target="4914.135">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7016</data>
      <data key="assumption">pended = 0;</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="4914.135"/>
    <edge source="4914.135" target="4915.136">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7017</data>
      <data key="assumption">compFptr = ((int (*)(struct _DEVICE_OBJECT *, struct _IRP *, void *))NULL);</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="4915.136"/>
    <edge source="4915.136" target="4916.137">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7018</data>
      <data key="assumption">compRegistered = 0;</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="4916.137"/>
    <edge source="4916.137" target="4917.138">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7019</data>
      <data key="assumption">lowerDriverReturn = 0;</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="4917.138"/>
    <edge source="4917.138" target="4918.139">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7020</data>
      <data key="assumption">setEventCalled = 0;</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="4918.139"/>
    <edge source="4918.139" target="31.141">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7021</data>
      <data key="assumption">customIrp = 0;</data>
      <data key="assumption.scope">stub_driver_init</data>
    </edge>
    <node id="31.141"/>
    <edge source="31.141" target="42.142">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7061</data>
      <data key="sourcecode">[status!0@1#3 &gt;= 0]</data>
    </edge>
    <node id="42.142"/>
    <edge source="42.142" target="45.143">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7066</data>
      <data key="sourcecode">[!(__BLAST_NONDET!0@1#4 == 0)]</data>
    </edge>
    <node id="45.143"/>
    <edge source="45.143" target="48.144">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7069</data>
      <data key="sourcecode">[!(__BLAST_NONDET!0@1#4 == 1)]</data>
    </edge>
    <node id="48.144"/>
    <edge source="48.144" target="51.145">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7072</data>
      <data key="sourcecode">[!(__BLAST_NONDET!0@1#4 == 2)]</data>
    </edge>
    <node id="51.145"/>
    <edge source="51.145" target="71.149">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7075</data>
      <data key="sourcecode">[!(!(__BLAST_NONDET!0@1#4 == 3))]</data>
    </edge>
    <node id="71.149"/>
    <edge source="71.149" target="4102.159">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7101</data>
      <data key="assumption">DeviceObject = &amp;devobj.Type;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="71.150"/>
    <node id="4102.159"/>
    <edge source="4102.159" target="4103.160">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3175</data>
      <data key="assumption">ntStatus = 0;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4103.160"/>
    <edge source="4103.160" target="4104.161">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3180</data>
      <data key="assumption">PagingReferenceCount = 1;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4104.161"/>
    <edge source="4104.161" target="4105.162">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3191</data>
      <data key="assumption">disketteExtension = ((struct _DISKETTE_EXTENSION *)NULL) + 1246464;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4105.162"/>
    <edge source="4105.162" target="4106.163">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3192</data>
      <data key="assumption">irpSp = &amp;u;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4106.163"/>
    <edge source="4106.163" target="4121.164">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3194</data>
      <data key="sourcecode">[disketteExtension$object#0.IsRemoved == 0]</data>
    </edge>
    <node id="4121.164"/>
    <edge source="4121.164" target="4124.165">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3205</data>
      <data key="sourcecode">[!((int)irpSp$object#0.MinorFunction == 0)]</data>
    </edge>
    <node id="4124.165"/>
    <edge source="4124.165" target="4150.169">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3208</data>
      <data key="sourcecode">[!(!((int)irpSp$object#0.MinorFunction == 5))]</data>
    </edge>
    <node id="4150.169"/>
    <edge source="4150.169" target="4170.170">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3243</data>
      <data key="sourcecode">[disketteExtension$object#0.IsStarted != 0]</data>
    </edge>
    <node id="4170.170"/>
    <edge source="4170.170" target="4171.173">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3262</data>
      <data key="assumption">disketteExtension$object.FlCancelSpinLock = 0; disketteExtension$object.UnderlyingPDO = ((struct _DEVICE_OBJECT *)NULL); disketteExtension$object.TargetObject = ((struct _DEVICE_OBJECT *)NULL); disketteExtension$object.IsStarted = 1; disketteExtension$object.IsRemoved = 0; disketteExtension$object.HoldNewRequests = 1; disketteExtension$object.NewRequestQueue.Flink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.NewRequestQueue.Blink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.NewRequestQueueSpinLock = 0; disketteExtension$object.DeviceObject = ((struct _DEVICE_OBJECT *)NULL); disketteExtension$object.RequestSemaphore.Header.Type = 0; disketteExtension$object.RequestSemaphore.Header.Absolute = 0; disketteExtension$object.RequestSemaphore.Header.Size = 0; disketteExtension$object.RequestSemaphore.Header.Inserted = 0; disketteExtension$object.RequestSemaphore.Header.SignalState = 0l; disketteExtension$object.RequestSemaphore.Header.WaitListHead.Flink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.RequestSemaphore.Header.WaitListHead.Blink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.RequestSemaphore.Limit = 0l; disketteExtension$object.ListSpinLock = 0; disketteExtension$object.ThreadReferenceMutex.Count = 0l; disketteExtension$object.ThreadReferenceMutex.Owner = ((struct _KTHREAD *)NULL); disketteExtension$object.ThreadReferenceMutex.Contention = 0ul; disketteExtension$object.ThreadReferenceMutex.Event.Header.Type = 0; disketteExtension$object.ThreadReferenceMutex.Event.Header.Absolute = 0; disketteExtension$object.ThreadReferenceMutex.Event.Header.Size = 0; disketteExtension$object.ThreadReferenceMutex.Event.Header.Inserted = 0; disketteExtension$object.ThreadReferenceMutex.Event.Header.SignalState = 0l; disketteExtension$object.ThreadReferenceMutex.Event.Header.WaitListHead.Flink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.ThreadReferenceMutex.Event.Header.WaitListHead.Blink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.ThreadReferenceMutex.OldIrql = 0ul; disketteExtension$object.ThreadReferenceCount = 0; disketteExtension$object.FloppyThread = ((struct _KTHREAD *)NULL); disketteExtension$object.ListEntry.Flink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.ListEntry.Blink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.HardwareFailed = 0; disketteExtension$object.HardwareFailCount = 0; disketteExtension$object.MaxTransferSize = 0; disketteExtension$object.FifoBuffer[0] = 0; disketteExtension$object.FifoBuffer[1] = 0; disketteExtension$object.FifoBuffer[2] = 0; disketteExtension$object.FifoBuffer[3] = 0; disketteExtension$object.FifoBuffer[4] = 0; disketteExtension$object.FifoBuffer[5] = 0; disketteExtension$object.FifoBuffer[6] = 0; disketteExtension$object.FifoBuffer[7] = 0; disketteExtension$object.FifoBuffer[8] = 0; disketteExtension$object.FifoBuffer[9] = 0; disketteExtension$object.IoBuffer = ((unsigned char *)NULL); disketteExtension$object.IoBufferMdl = ((struct _MDL *)NULL); disketteExtension$object.IoBufferSize = 0; disketteExtension$object.DriverObject = ((struct _DRIVER_OBJECT *)NULL); disketteExtension$object.LastDriveMediaType = /*enum*/Drive360Media160; disketteExtension$object.FloppyControllerAllocated = 0; disketteExtension$object.ACPI_BIOS = 0; disketteExtension$object.DriveType = 0; disketteExtension$object.BytesPerSector = 0; disketteExtension$object.ByteCapacity = 0; disketteExtension$object.MediaType = /*enum*/Unknown; disketteExtension$object.DriveMediaType = /*enum*/Drive360Media160; disketteExtension$object.DeviceUnit = 0; disketteExtension$object.DriveOnValue = 0; disketteExtension$object.IsReadOnly = 0; disketteExtension$object.BiosDriveMediaConstants.MediaType = /*enum*/Unknown; disketteExtension$object.BiosDriveMediaConstants.StepRateHeadUnloadTime = 0; disketteExtension$object.BiosDriveMediaConstants.HeadLoadTime = 0; disketteExtension$object.BiosDriveMediaConstants.MotorOffTime = 0; disketteExtension$object.BiosDriveMediaConstants.SectorLengthCode = 0; disketteExtension$object.BiosDriveMediaConstants.BytesPerSector = 0; disketteExtension$object.BiosDriveMediaConstants.SectorsPerTrack = 0; disketteExtension$object.BiosDriveMediaConstants.ReadWriteGapLength = 0; disketteExtension$object.BiosDriveMediaConstants.FormatGapLength = 0; disketteExtension$object.BiosDriveMediaConstants.FormatFillCharacter = 0; disketteExtension$object.BiosDriveMediaConstants.HeadSettleTime = 0; disketteExtension$object.BiosDriveMediaConstants.MotorSettleTimeRead = 0; disketteExtension$object.BiosDriveMediaConstants.MotorSettleTimeWrite = 0; disketteExtension$object.BiosDriveMediaConstants.MaximumTrack = 0; disketteExtension$object.BiosDriveMediaConstants.CylinderShift = 0; disketteExtension$object.BiosDriveMediaConstants.DataTransferRate = 0; disketteExtension$object.BiosDriveMediaConstants.NumberOfHeads = 0; disketteExtension$object.BiosDriveMediaConstants.DataLength = 0; disketteExtension$object.BiosDriveMediaConstants.MediaByte = 0; disketteExtension$object.BiosDriveMediaConstants.SkewDelta = 0; disketteExtension$object.DriveMediaConstants.MediaType = /*enum*/Unknown; disketteExtension$object.DriveMediaConstants.StepRateHeadUnloadTime = 0; disketteExtension$object.DriveMediaConstants.HeadLoadTime = 0; disketteExtension$object.DriveMediaConstants.MotorOffTime = 0; disketteExtension$object.DriveMediaConstants.SectorLengthCode = 0; disketteExtension$object.DriveMediaConstants.BytesPerSector = 0; disketteExtension$object.DriveMediaConstants.SectorsPerTrack = 0; disketteExtension$object.DriveMediaConstants.ReadWriteGapLength = 0; disketteExtension$object.DriveMediaConstants.FormatGapLength = 0; disketteExtension$object.DriveMediaConstants.FormatFillCharacter = 0; disketteExtension$object.DriveMediaConstants.HeadSettleTime = 0; disketteExtension$object.DriveMediaConstants.MotorSettleTimeRead = 0; disketteExtension$object.DriveMediaConstants.MotorSettleTimeWrite = 0; disketteExtension$object.DriveMediaConstants.MaximumTrack = 0; disketteExtension$object.DriveMediaConstants.CylinderShift = 0; disketteExtension$object.DriveMediaConstants.DataTransferRate = 0; disketteExtension$object.DriveMediaConstants.NumberOfHeads = 0; disketteExtension$object.DriveMediaConstants.DataLength = 0; disketteExtension$object.DriveMediaConstants.MediaByte = 0; disketteExtension$object.DriveMediaConstants.SkewDelta = 0; disketteExtension$object.PerpendicularMode = 0; disketteExtension$object.ControllerConfigurable = 0; disketteExtension$object.DeviceName.Length = 0; disketteExtension$object.DeviceName.MaximumLength = 0; disketteExtension$object.DeviceName.Buffer = ((unsigned short int *)NULL); disketteExtension$object.InterfaceString.Length = 0; disketteExtension$object.InterfaceString.MaximumLength = 0; disketteExtension$object.InterfaceString.Buffer = &amp;irp.Type; disketteExtension$object.ArcName.Length = 512; disketteExtension$object.ArcName.MaximumLength = 0; disketteExtension$object.ArcName.Buffer = ((unsigned short int *)NULL); disketteExtension$object.ReleaseFdcWithMotorRunning = 0; disketteExtension$object.PoweringDown = 0; disketteExtension$object.PowerDownMutex.Count = 0l; disketteExtension$object.PowerDownMutex.Owner = ((struct _KTHREAD *)NULL); disketteExtension$object.PowerDownMutex.Contention = 0ul; disketteExtension$object.PowerDownMutex.Event.Header.Type = 0; disketteExtension$object.PowerDownMutex.Event.Header.Absolute = 0; disketteExtension$object.PowerDownMutex.Event.Header.Size = 0; disketteExtension$object.PowerDownMutex.Event.Header.Inserted = 0; disketteExtension$object.PowerDownMutex.Event.Header.SignalState = 0l; disketteExtension$object.PowerDownMutex.Event.Header.WaitListHead.Flink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.PowerDownMutex.Event.Header.WaitListHead.Blink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.PowerDownMutex.OldIrql = 0ul; disketteExtension$object.HoldNewReqMutex.Count = 0l; disketteExtension$object.HoldNewReqMutex.Owner = ((struct _KTHREAD *)NULL); disketteExtension$object.HoldNewReqMutex.Contention = 0ul; disketteExtension$object.HoldNewReqMutex.Event.Header.Type = 0; disketteExtension$object.HoldNewReqMutex.Event.Header.Absolute = 0; disketteExtension$object.HoldNewReqMutex.Event.Header.Size = 0; disketteExtension$object.HoldNewReqMutex.Event.Header.Inserted = 0; disketteExtension$object.HoldNewReqMutex.Event.Header.SignalState = 0l; disketteExtension$object.HoldNewReqMutex.Event.Header.WaitListHead.Flink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.HoldNewReqMutex.Event.Header.WaitListHead.Blink = ((struct _LIST_ENTRY *)NULL); disketteExtension$object.HoldNewReqMutex.OldIrql = 0ul;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4171.173"/>
    <edge source="4171.173" target="3322.179">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3264</data>
      <data key="assumption">Irp = &amp;irp.Type;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4171.174"/>
    <node id="3322.179"/>
    <edge source="3322.179" target="3323.180">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2556</data>
      <data key="assumption">irpSp = &amp;u;</data>
      <data key="assumption.scope">FlQueueIrpToThread</data>
    </edge>
    <node id="3323.180"/>
    <edge source="3323.180" target="3324.181">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2559</data>
      <data key="sourcecode">[!(!((int)DisketteExtension$object#54.PoweringDown == 1))]</data>
    </edge>
    <node id="3324.181"/>
    <edge source="3324.181" target="3325.182">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2565</data>
      <data key="assumption">myStatus = -1073741101;</data>
      <data key="assumption.scope">FlQueueIrpToThread</data>
    </edge>
    <node id="3325.182"/>
    <edge source="3325.182" target="3326.183">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2566</data>
      <data key="assumption">irp.Type = 0; irp.Size = 0; irp.MdlAddress = ((struct _MDL *)NULL); irp.Flags = 0; irp.AssociatedIrp.MasterIrp = ((struct _IRP *)NULL) + 4102; irp.ThreadListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.ThreadListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.IoStatus.__annonCompField4.Status = -1073741101l; irp.IoStatus.Information = 25178128ul; irp.RequestorMode = 0; irp.PendingReturned = 0; irp.StackCount = 0; irp.CurrentLocation = 31; irp.Cancel = 1; irp.CancelIrql = 0; irp.ApcEnvironment = 0; irp.AllocationFlags = 0; irp.UserIosb = ((struct _IO_STATUS_BLOCK *)NULL); irp.UserEvent = ((struct _KEVENT *)NULL); irp.Overlay.AsynchronousParameters.UserApcRoutine = ((void (*)(void *, struct _IO_STATUS_BLOCK *, unsigned long int))NULL); irp.Overlay.AsynchronousParameters.UserApcContext = NULL; irp.CancelRoutine = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); irp.UserBuffer = NULL; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.SortKey = 0ul; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.Inserted = 0; irp.Tail.Overlay.Thread = ((struct _ETHREAD *)NULL); irp.Tail.Overlay.AuxiliaryBuffer = ((char *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation = &amp;u; irp.Tail.Overlay.OriginalFileObject = ((struct _FILE_OBJECT *)NULL);</data>
      <data key="assumption.scope">FlQueueIrpToThread</data>
    </edge>
    <node id="3326.183"/>
    <edge source="3326.183" target="4172.187">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2567</data>
      <data key="assumption">irp.Type = 0; irp.Size = 0; irp.MdlAddress = ((struct _MDL *)NULL); irp.Flags = 0; irp.AssociatedIrp.MasterIrp = ((struct _IRP *)NULL) + 4102; irp.ThreadListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.ThreadListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.IoStatus.__annonCompField4.Status = -1073741101l; irp.IoStatus.Information = 0ul; irp.RequestorMode = 0; irp.PendingReturned = 0; irp.StackCount = 0; irp.CurrentLocation = 31; irp.Cancel = 1; irp.CancelIrql = 0; irp.ApcEnvironment = 0; irp.AllocationFlags = 0; irp.UserIosb = ((struct _IO_STATUS_BLOCK *)NULL); irp.UserEvent = ((struct _KEVENT *)NULL); irp.Overlay.AsynchronousParameters.UserApcRoutine = ((void (*)(void *, struct _IO_STATUS_BLOCK *, unsigned long int))NULL); irp.Overlay.AsynchronousParameters.UserApcContext = NULL; irp.CancelRoutine = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); irp.UserBuffer = NULL; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.SortKey = 0ul; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.Inserted = 0; irp.Tail.Overlay.Thread = ((struct _ETHREAD *)NULL); irp.Tail.Overlay.AuxiliaryBuffer = ((char *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation = &amp;u; irp.Tail.Overlay.OriginalFileObject = ((struct _FILE_OBJECT *)NULL);</data>
      <data key="assumption.scope">FlQueueIrpToThread</data>
    </edge>
    <node id="4172.187"/>
    <edge source="4172.187" target="4174.188">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3264</data>
      <data key="assumption">ntStatus = -1073741101;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4174.188"/>
    <edge source="4174.188" target="4189.189">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3266</data>
      <data key="sourcecode">[!(ntStatus!0@1#11 == 259)]</data>
    </edge>
    <node id="4189.189"/>
    <edge source="4189.189" target="4190.190">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3295</data>
      <data key="assumption">ntStatus = -1073741823;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4190.190"/>
    <edge source="4190.190" target="4191.191">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3296</data>
      <data key="assumption">irp.Type = 0; irp.Size = 0; irp.MdlAddress = ((struct _MDL *)NULL); irp.Flags = 0; irp.AssociatedIrp.MasterIrp = ((struct _IRP *)NULL) + 4102; irp.ThreadListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.ThreadListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.IoStatus.__annonCompField4.Status = -1073741823l; irp.IoStatus.Information = 0ul; irp.RequestorMode = 0; irp.PendingReturned = 0; irp.StackCount = 0; irp.CurrentLocation = 31; irp.Cancel = 1; irp.CancelIrql = 0; irp.ApcEnvironment = 0; irp.AllocationFlags = 0; irp.UserIosb = ((struct _IO_STATUS_BLOCK *)NULL); irp.UserEvent = ((struct _KEVENT *)NULL); irp.Overlay.AsynchronousParameters.UserApcRoutine = ((void (*)(void *, struct _IO_STATUS_BLOCK *, unsigned long int))NULL); irp.Overlay.AsynchronousParameters.UserApcContext = NULL; irp.CancelRoutine = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); irp.UserBuffer = NULL; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.SortKey = 0ul; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.Inserted = 0; irp.Tail.Overlay.Thread = ((struct _ETHREAD *)NULL); irp.Tail.Overlay.AuxiliaryBuffer = ((char *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation = &amp;u; irp.Tail.Overlay.OriginalFileObject = ((struct _FILE_OBJECT *)NULL);</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4191.191"/>
    <edge source="4191.191" target="4192.192">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3297</data>
      <data key="assumption">myStatus = -1073741823;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4192.192"/>
    <edge source="4192.192" target="4193.195">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3298</data>
      <data key="assumption">irp.Type = 0; irp.Size = 0; irp.MdlAddress = ((struct _MDL *)NULL); irp.Flags = 0; irp.AssociatedIrp.MasterIrp = ((struct _IRP *)NULL) + 4102; irp.ThreadListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.ThreadListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.IoStatus.__annonCompField4.Status = -1073741823l; irp.IoStatus.Information = 0ul; irp.RequestorMode = 0; irp.PendingReturned = 0; irp.StackCount = 0; irp.CurrentLocation = 31; irp.Cancel = 1; irp.CancelIrql = 0; irp.ApcEnvironment = 0; irp.AllocationFlags = 0; irp.UserIosb = ((struct _IO_STATUS_BLOCK *)NULL); irp.UserEvent = ((struct _KEVENT *)NULL); irp.Overlay.AsynchronousParameters.UserApcRoutine = ((void (*)(void *, struct _IO_STATUS_BLOCK *, unsigned long int))NULL); irp.Overlay.AsynchronousParameters.UserApcContext = NULL; irp.CancelRoutine = ((void (*)(struct _DEVICE_OBJECT *, struct _IRP *))NULL); irp.UserBuffer = NULL; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.DeviceListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.SortKey = 0ul; irp.Tail.Overlay.__annonCompField15.DeviceQueueEntry.Inserted = 0; irp.Tail.Overlay.Thread = ((struct _ETHREAD *)NULL); irp.Tail.Overlay.AuxiliaryBuffer = ((char *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Flink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.ListEntry.Blink = ((struct _LIST_ENTRY *)NULL); irp.Tail.Overlay.__annonCompField17.__annonCompField16.CurrentStackLocation = &amp;u; irp.Tail.Overlay.OriginalFileObject = ((struct _FILE_OBJECT *)NULL);</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4193.195"/>
    <edge source="4193.195" target="909.198">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3299</data>
      <data key="assumption">Irp = &amp;irp.Type;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="4193.196"/>
    <node id="909.198"/>
    <edge source="909.198" target="4316.203">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7739</data>
      <data key="assumption">s = 2;</data>
      <data key="assumption.scope">IofCompleteRequest</data>
    </edge>
    <node id="4316.203"/>
    <edge source="4316.203" target="72.207">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">3483</data>
      <data key="assumption">PagingReferenceCount = 0;</data>
      <data key="assumption.scope">FloppyPnp</data>
    </edge>
    <node id="72.207"/>
    <edge source="72.207" target="92.210">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7101</data>
      <data key="assumption">status = -1073741823;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="92.210"/>
    <edge source="92.210" target="94.211">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7120</data>
      <data key="sourcecode">[we_should_unload!0@1#10 == 0]</data>
    </edge>
    <node id="94.211"/>
    <edge source="94.211" target="100.212">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7130</data>
      <data key="sourcecode">[!(pended#79 == 1)]</data>
    </edge>
    <node id="100.212"/>
    <edge source="100.212" target="106.213">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7138</data>
      <data key="sourcecode">[!(pended#79 == 1)]</data>
    </edge>
    <node id="106.213"/>
    <edge source="106.213" target="107.214">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7146</data>
      <data key="sourcecode">[!(s#165 == 0)]</data>
    </edge>
    <node id="107.214"/>
    <edge source="107.214" target="108.215">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7149</data>
      <data key="sourcecode">[!(status!0@1#22 == -1)]</data>
    </edge>
    <node id="108.215"/>
    <edge source="108.215" target="109.216">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7152</data>
      <data key="sourcecode">[!(s#165 == 4)]</data>
    </edge>
    <node id="109.216"/>
    <edge source="109.216" target="110.217">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7153</data>
      <data key="sourcecode">[!(s#165 == 7)]</data>
    </edge>
    <node id="110.217"/>
    <edge source="110.217" target="117.219">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7154</data>
      <data key="sourcecode">[s#165 == 2]</data>
    </edge>
    <node id="117.219"/>
    <edge source="117.219" target="121.220">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7166</data>
      <data key="sourcecode">[!(pended#79 == 1)]</data>
    </edge>
    <node id="121.220"/>
    <edge source="121.220" target="4894.223">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">7173</data>
      <data key="sourcecode">[!(!(s#165 == 2))]</data>
    </edge>
    <node id="4894.223">
      <data key="violation">true</data>
    </node>
    <edge source="4894.223" target="sink">
      <data key="originfile">test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c</data>
      <data key="startline">2090</data>
    </edge>
  </graph>
</graphml>
est/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c line 7101 function main thread 0
----------------------------------------------------
  status=-1073741823 (11000000000000000000000000000001)

Violated property:
  file test/programs/benchmarks/ntdrivers/floppy_false-unreach-call.i.cil.c line 2090 function errorFn
  assertion
  FALSE

VERIFICATION FAILED
EC=10
FALSE
